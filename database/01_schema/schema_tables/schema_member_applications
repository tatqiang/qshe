create table public.member_applications (
  id uuid not null default gen_random_uuid (),
  project_id uuid null,
  form_template_id uuid not null,
  company_id uuid null,
  token_id uuid null,
  submission_number text not null,
  submitted_at timestamp with time zone null default now(),
  submitted_by_name text null,
  submitted_by_email text null,
  submitted_by_phone text null,
  form_data jsonb not null default '{}'::jsonb,
  status text not null default 'pending'::text,
  reviewed_at timestamp with time zone null,
  reviewed_by uuid null,
  reviewer_notes text null,
  applicant_signature_url text null,
  supervisor_signature_url text null,
  supervisor_signed_at timestamp with time zone null,
  supervisor_signed_by uuid null,
  ip_address text null,
  user_agent text null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint member_applications_pkey primary key (id),
  constraint member_applications_submission_number_key unique (submission_number),
  constraint member_applications_company_id_fkey foreign KEY (company_id) references companies (id) on delete set null,
  constraint member_applications_form_template_id_fkey foreign KEY (form_template_id) references form_templates (id) on delete CASCADE,
  constraint member_applications_reviewed_by_fkey foreign KEY (reviewed_by) references users (id),
  constraint fk_member_applications_token foreign KEY (token_id) references member_application_tokens (id) on delete set null,
  constraint member_applications_supervisor_signed_by_fkey foreign KEY (supervisor_signed_by) references users (id),
  constraint member_application_project_id_fkey foreign KEY (project_id) references projects (id) on delete set null
) TABLESPACE pg_default;

create index IF not exists idx_member_applications_project on public.member_applications using btree (project_id) TABLESPACE pg_default;

create index IF not exists idx_member_applications_company on public.member_applications using btree (company_id) TABLESPACE pg_default;

create index IF not exists idx_member_applications_status on public.member_applications using btree (status) TABLESPACE pg_default;

create index IF not exists idx_member_applications_submitted on public.member_applications using btree (submitted_at desc) TABLESPACE pg_default;

create index IF not exists idx_member_applications_token on public.member_applications using btree (token_id) TABLESPACE pg_default;

create index IF not exists idx_member_applications_form_data on public.member_applications using gin (form_data) TABLESPACE pg_default;

create index IF not exists idx_member_applications_project_status on public.member_applications using btree (project_id, status) TABLESPACE pg_default;

create index IF not exists idx_member_applications_project_submitted on public.member_applications using btree (project_id, submitted_at desc) TABLESPACE pg_default;

create trigger trigger_create_initial_member_company
after INSERT on member_applications for EACH row
execute FUNCTION create_initial_member_company ();

create trigger trigger_member_applications_updated_at BEFORE
update on member_applications for EACH row
execute FUNCTION update_updated_at ();

create trigger trigger_set_submission_number BEFORE INSERT on member_applications for EACH row
execute FUNCTION set_submission_number ();