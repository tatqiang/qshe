create table public.main_areas (
  id uuid not null default gen_random_uuid (),
  project_id uuid not null,
  main_area_name character varying(255) not null,
  area_code character varying(50) null,
  description text null,
  area_type character varying(50) null default 'building'::character varying,
  area_size numeric(10, 2) null,
  is_hazardous boolean null default false,
  requires_permit boolean null default false,
  latitude numeric(10, 8) null,
  longitude numeric(11, 8) null,
  status character varying(20) null default 'active'::character varying,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  created_by uuid null,
  updated_by uuid null,
  constraint main_areas_pkey primary key (id),
  constraint main_areas_project_id_main_area_name_key unique (project_id, main_area_name),
  constraint main_areas_created_by_fkey foreign KEY (created_by) references users (id),
  constraint main_areas_project_id_fkey foreign KEY (project_id) references projects (id) on delete CASCADE,
  constraint main_areas_updated_by_fkey foreign KEY (updated_by) references users (id),
  constraint main_areas_main_area_name_check check ((length((main_area_name)::text) >= 1))
) TABLESPACE pg_default;

create index IF not exists idx_main_areas_project_id on public.main_areas using btree (project_id) TABLESPACE pg_default;

create index IF not exists idx_main_areas_name on public.main_areas using gin (
  to_tsvector('english'::regconfig, (main_area_name)::text)
) TABLESPACE pg_default;

create index IF not exists idx_main_areas_status on public.main_areas using btree (status) TABLESPACE pg_default;

create index IF not exists idx_main_areas_type on public.main_areas using btree (area_type) TABLESPACE pg_default;